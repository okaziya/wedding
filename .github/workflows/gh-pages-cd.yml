name: GitHub Pages Deployment

on:
  workflow_dispatch:
  release:
    types: [published]

jobs:
  build_info:
    runs-on: ubuntu-latest
    outputs:
      GITHUB_ACTOR: ${{ steps.create.outputs.GITHUB_ACTOR }}
      GITHUB_SHA_SHORT: ${{ steps.create.outputs.GITHUB_SHA_SHORT }}
      COMMIT_URL: ${{ steps.create.outputs.COMMIT_URL }}
      BUILD_TIMESTAMP: ${{ steps.create.outputs.BUILD_TIMESTAMP }}
    steps:
      - id: create
        name: "@${{ github.actor }} initiated GitHub Pages deployment, prepare build info"
        run: |
          # Builder username on GitHub
          echo "GITHUB_ACTOR=${{ github.actor }}" && echo "GITHUB_ACTOR=${{ github.actor }}" >> "$GITHUB_OUTPUT"

          # Create short Git SHA equivalent to `$(git rev-parse --short HEAD)` e.g. "d1f5cfd"
          GITHUB_SHA_SHORT="${GITHUB_SHA::7}"
          echo "GITHUB_SHA_SHORT=$GITHUB_SHA_SHORT" && echo "GITHUB_SHA_SHORT=$GITHUB_SHA_SHORT" >> "$GITHUB_OUTPUT"

          # Create commit URL, e.g. "https://github.com/okaziya/wedding/commit/d1f5cfd"
          COMMIT_URL="https://github.com/${{ github.repository }}/commit/$GITHUB_SHA_SHORT"
          echo "COMMIT_URL=$COMMIT_URL" && echo "COMMIT_URL=$COMMIT_URL" >> "$GITHUB_OUTPUT"

          # Create ISO format build timestamp in UTC, e.g. "2024-02-19T13:12:52Z"
          BUILD_TIMESTAMP=$(date -u +"%Y-%m-%dT%H:%M:%SZ")
          echo "BUILD_TIMESTAMP=$BUILD_TIMESTAMP" && echo "BUILD_TIMESTAMP=$BUILD_TIMESTAMP" >> "$GITHUB_OUTPUT"

  build:
    needs: build_info
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Inject Build Info
        run: |
          # Overwrite build-info.json in source root dir
          cat <<EOF > ./src/build-info.json
          {
            "GITHUB_ACTOR": "${{ needs.build_info.outputs.GITHUB_ACTOR }}",
            "GITHUB_SHA_SHORT": "${{ needs.build_info.outputs.GITHUB_SHA_SHORT }}",
            "COMMIT_URL": "${{ needs.build_info.outputs.COMMIT_URL }}",            
            "BUILD_TIMESTAMP": "${{ needs.build_info.outputs.BUILD_TIMESTAMP }}"
          }
          EOF
          # Expose <hostname>/wedding/build-info.json as a static file
          cp -vf ./src/build-info.json ./public/build-info.json

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "20"

      - name: Install dependencies
        run: npm install

      - name: Build project
        run: npm run build

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./dist

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    permissions:
      id-token: write
      pages: write
      contents: read
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
